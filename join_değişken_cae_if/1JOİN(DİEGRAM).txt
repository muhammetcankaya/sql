Şimdi biz tablolarımızda veriler tekrar etmesin diye ne yapıyorduk 
veriler tekrar etmesin diye tabloları parçalayıp bunları birbiri içinde id leri ile gösteriyorduk

yani aslında bunu burada örneklemek isterim

yani diyelimki bir hastanemiz var
hasta ülke il ilçe doktor kan bolum ve kurum olsun 

bir doktara ait bir sürü hasta olabilir bunları birlikte yazmaya kalksak
400 doktor 5000 hasta olsa bütün bunları aynı tabloda yazmak 
doktorun adı soyadı adresi numarası falan da var aynı şekilde hastanında var
bir sürü satır ve sutun demek oluyor bu 
e biz ne yapıyoruz 
hastaları başka tabloda doktorları başka tabloda gerektiğinde beraber yazacaz bunları

e tamam gittik bir sürü şeyi yazdık diyelim
yani ülkeleri id ile tablo doktorları kan gruplarını bölümleri kurumları yaptık
e bunların primery key leri olacak 
bunları ilişkilendirmek içinse bunların için foreing key ler oluşturup join yapısıyla
bunları birlikte gösterebileceğiz

Hastane veri tabanında olacak bu işlemler

select*from Hasta join kan on hasta.Kan_id=Kan.Kan_id 

Şimdi biz bu kan grubu ve hastaları ayırmıştıştık ve aralarında ilişkiyi kurmuştuk
join kullanarak bu iki yapıyı yanyana getiyoruz başka örnek verelim


select*from Hasta join il on hasta.İl_id=il.il_id
Haslaların illerini foregn key olarak dizayn etmiştik artık onlar yerine illeri görebileceğiz


SELECT *FROM DOKTOR join Bolum on Doktor.Bolum_id=Bolum.Bolum_id
Bu yapıda doktor tablosunda bölüm foregn keylerin yerine bölümleri yazdı

--select* from doktor inner join Bolum
--on Doktor.Bolum_id=Bolum.Bolum_id
--bu yapı bize doktorun bütün bilgileri ve yanında bölüm ıd kısmını getirdi 
--select Dok_Ad,Dok_Soyad,Dok_Tc,Bolum from doktor inner join Bolum
--on Doktor.Bolum_id=Bolum.Bolum_id
--ama bu yapıyla biz doktor ad doktor soyad bolum kısmını yalnızca gördük 
--burada aslında bu inner join yapısı ortak alanı getirecektir ama burada herşey  işleştiği için sıkıntımız yok
--select Dok_Ad+' '+ Dok_Soyad as Ad_soyad,Bolum from Doktor inner join Bolum on Doktor.Bolum_id=Bolum.Bolum_id 
--Bu yapıyı da kurarak doktor ad soyad yanında bölümleri rahatça görebildik


JOİN YAPISINDA DÖRT ÇEŞİT YAPI VARDIR
INNER JOİN
İKİ TABLONUN KEŞİSİMİNİ GETİRİR YANİ KESİŞİM OLMAYAN YERLERİ GETİRMEZ
LEFT JOİN 
LEFT DEKİ TABLOYLA RİGHT ARASINDAKİ KESİŞİMİ GETİRİR
A VE B KÜMELERİ DÜŞÜNSEK 
A BİRLEŞİM A KESİŞİM B
RIGHT JOİN
A VE B KÜMELERİNİ DÜŞÜNSEK 
B BİRLEŞİM A KESİŞİM B
FULL JOİN
NE VAR NE YOK GETİRİR

ÖRNEKLER İLE DAHA İYİ ANLAŞILACAK
of bu kısımda çok sıkıldım aslında anladım ama

--use Hastane
--select Hasta_Ad+' '+Hasta_Soyad as ad_soyad,Kan_Grup from Hasta inner join Kan on hasta.Kan_id=Kan.Kan_id
-- A rh + B rh - isim soy isim cinsiyet
--select Hasta_id,Hasta_Ad+' '+Hasta_Soyad as ad_soyad,Hasta_Cinsiyet,Kan_Grup from 
--Hasta inner join Kan on hasta.Kan_id=Kan.Kan_id
--where Kan_Grup='A Rh +' or Kan_Grup='B Rh -' order by ad_soyad

--acıbadem sigorta,axa sigorta,sgk 60 yaş üzeri erkekler ad soyad ve tc kimlik  hastaların

--select Hasta_Cinsiyet,Hasta_ad+' '+Hasta_Soyad as 'Ad Soyad',DATEDIFF(YEAR,Hasta_Dgmtrh,GETDATE()) AS HASTA_YASS
--,Hasta_Tc,Kurum from Hasta inner join Kurum on 
--Hasta.Kurum_id=Kurum.Kurum_id  where (Kurum='Acıbadem Sigorta' or Kurum='Sgk' or Kurum='Axa Sigorta') AND Hasta_Cinsiyet='E' 
--AND DATEDIFF(YEAR,Hasta_Dgmtrh,GETDATE())>60 ORDER BY [Ad Soyad]

--Bölümlere göre doktorların yaş ortalaması gerekli bize
--select *from doktor
--select*from Bolum
--select Bolum,avg(DATEDIFF(YEAR,Dok_Dgmtrh,GETDATE()))as Doktor_yas from Doktor inner join
--Bolum  on Doktor.Bolum_id=Bolum.Bolum_id group by bolum
-- doktor yaşlarını bölümlere göre grupladık

--Şimdiye kadar hep ilişkili olan iki tablo üzerinde çalışmıştık şimdi ise
--bir tablo iki üç tabloyla ilişkili ise nasıl bu ilişkiyle birlikte sutun getiririz bunu öğrenicez
--select*from Hasta

--hasta adı soyadı tc si yanına doktoru adı soyadı cinsiyeti 
--select Hasta_ad+' '+Hasta_soyad as 'Ad soyad',Hasta_Tc,Dok_Ad+' '+Dok_Soyad as dok_ad_soyad,Dok_Cinsiyet 
--from Hasta inner join Doktor on Hasta.Hasta_id=Doktor.Dok_id


--Hasta adı soyadı,tc,cinsiyet,yaş,mtel,il,ilçe,kurum,doktor,bolum

--select Hasta_ad+' '+Hasta_soyad as 'Ad soyad',Hasta_Tc,Hasta_Cinsiyet,datediff(year,Hasta_Dgmtrh,GETDATE()),
--Hasta_Tel,İl,ilce,Kan_Grup,Kurum,Dok_Ad+' '+Dok_soyad AS Doktor_ad_soyad,Bolum
--from Hasta 
--inner join il on Hasta.il_id=il.il_id 
--inner join İlce on Hasta.ilce_id=İlce.ilce_id
--inner join Kan on Hasta.kan_id=Kan.kan_id
--inner join Kurum on Hasta.kurum_id=Kurum.kurum_id
--inner join Doktor on Hasta.Dok_id=Doktor.Dok_id
--inner join Bolum on Doktor.Bolum_id=Bolum.Bolum_id


--Bölüm bazlı hasta toplamı

--select Bolum,COUNT(Hasta_ad) AS HASTA_TOPLAM
--from Hasta 
--inner join Doktor on Hasta.Dok_id=Doktor.Dok_id
--inner join Bolum on Doktor.Bolum_id=Bolum.Bolum_id
--GROUP BY Bolum ORDER BY [HASTA_TOPLAM] DESC






